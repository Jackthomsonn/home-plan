version: "3"

services:
  connect:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=main
    ports:
      - 8080:8080
      - 2345:2345
    volumes:
      - .:/app:rw,delegated
      - ./cmd/connect/.air.toml:/app/.air.toml
    networks:
      - home-plan-network
  weather:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      - DB_HOST=host.docker.internal
      - DB_USER=postgres
      - DB_PORT=5432
      - DB_PASSWORD=postgres
      - DB_NAME=main
    ports:
      - 8082:8080
      - 2347:2345
    volumes:
      - .:/app:rw,delegated
      - ./cmd/weather/.air.toml:/app/.air.toml
    networks:
      - home-plan-network
    labels:
      ofelia.enabled: "true"
  optimiser:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      - DB_HOST=host.docker.internal
      - DB_USER=postgres
      - DB_PORT=5432
      - DB_PASSWORD=postgres
      - DB_NAME=main
    ports:
      - 8081:8080
      - 2346:2345
    volumes:
      - .:/app:rw,delegated
      - ./cmd/optimiser/.air.toml:/app/.air.toml
    networks:
      - home-plan-network
  grid:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    environment:
      - DB_HOST=host.docker.internal
      - DB_USER=postgres
      - DB_PORT=5432
      - DB_PASSWORD=postgres
      - DB_NAME=main
    ports:
      - 8083:8080
      - 2348:2345
    volumes:
      - .:/app:rw,delegated
      - ./cmd/grid/.air.toml:/app/.air.toml
    networks:
      - home-plan-network
  home-plan-db:
    volumes:
      - home-plan-db-data:/var/lib/postgresql/data
    image: "postgres:16.2-alpine"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "main"
    restart: always
    networks:
      - home-plan-network
    ports:
      - 5432:5432
  scheduler:
    image: jackthomson/simple-scheduler
    environment:
      - CONTAINER_NAME=http://weather:8080/weather
      - FREQUENCY_SECONDS=10
      - DELAY_SECONDS=5
    networks:
      - home-plan-network
networks:
  home-plan-network:
volumes:
  home-plan-db-data: